cmdhistory=["(def server (jetty/run-jetty \#'app {\:port 8080 \:join? false}))" "(app {\:uri \\"/hello\\"})" "(use 'clojure.repl)" "urls" "@urls" "(require '[net.cgrand.enlive-html \:as html])" "(and nil nil)" "(and seq nil)" "(and [1 2 3] nil)" "(and [1 2 3] [1 2 3])" "(and \\"blah\\" \\"blah\\")" "(mc/find db \\"users\\" {\:username \\"admin\\"})" "(mc/find db \\"users\\" {\:username \\"sadasd\\"})" "(mc/find-maps db \\"users\\" {\:username \\"sadasd\\"})" "(mc/find db \\"users\\" {\:username \\"admin\\"})" "(and () ())" "(and \\"blah\\" \\"blah\\")" "(empty? ())" "(and (true) (false))" "(and true false)" "(and false true)" "(and true true)" "(and false false)" "(mc/find-maps db \\"users\\" {\:username \\"admin\\"})" "(empty? (mc/find-maps db \\"users\\" {\:username username}))" "(empty? (mc/find-maps db \\"users\\" {\:username \\"admin\\"}))" "(empty? (mc/find-maps db \\"users\\" {\:username \\"dasdasd\\"}))" "(let [existing-password (mc/find-maps db \\"users\\" {\:password \\"blojga\\"})])" "(existing-password)" "existing-password" "(def existing-password (mc/find-maps db \\"users\\" {\:password \\"blojga\\"})])" "(def existing-password (mc/find-maps db \\"users\\" {\:password \\"blojga\\"}))" "(existing-password)" "existing-password" "(def existing-password (mc/find-maps db \\"users\\" {\:password \\"blojga\\"}))" "(def existing-password (mc/find-maps db \\"users\\" {\:password \\"admin\\"}))" "existing-password" "(and false false)" "(db/auth \\"admin\\" \\"bulja\\")" "(db/auth \\"admin\\" \\"admin\\")" "(db/auth \\"zzz\\" \\"zdas\\")" "(db/auth \\"admin\\" \\"bulja\\")" "(not-any? true false)" "(or true false)" "(or false false)" "(or false true)" "(or true true)" "(login \\"admin\\" \\"admin\\")" "(login \\"admin\\" \\"hehe\\")" "(login \\"balba\\" \\"balba\\")" "(login \\"sdaas\\" \\"dasdsa\\")" "(ns gpufinder.controller)" "(login \\"a\\" \\"a\\")" "(reg admin bla)" "(reg \\"admin\\" \\"bla\\")" "(reg \\"a\\" \\"a\\")" "(compare \\"a\\" \\"a\\")" "(\= \\"a\\" \\"a\\")" "(register \\"admin\\" \\"a\\" \\"a\\")" "(ns gpufinder.controller)" "(register \\"admin\\" \\"a\\" \\"a\\")" "(db/reg \\"a\\" \\"a\\")" "(register \\"a\\" \\"a\\" \\"a\\")" "(require '[clojure.xml \:as xml])" "(require '[clojure.zip \:as zip])" "(defn zip-str [s]\\r\\n  (zip/xml-zip \\r\\n      (xml/parse (java.io.ByteArrayInputStream. (.getBytes s)))))" "(zip-str \\"<a href\='nakkaya.com'/>\\")" "(zip-str \\"<a href\='gpuboss.com/sitemap/gpus.xml/'/>\\")"]
eclipse.preferences.version=1
